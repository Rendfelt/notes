



Классы
	class MyClass:
		a = 10
		b = 20
		
		def classFunction(x):
			print(x)
			

Конструирование объекта
	a = MyClass()
	
	
наследование
	class A(list)		Класс А наследуется от класса лист
	class B(A, C, D)	Класс B наследуется от классов A, C, D
	

проверка является ли классом или наследником
	issubclass(A, B)	Является ли класс А наследником класса B
	
	
проверка является ли классом или наследником
	isinstance(A, B)	Является ли type(А) наследником класса B
	
	
поиск нужного метода или поля в классе-родителе
	class D: pass
	class E: pass
	class B(D, E): pass
	class C: pass
	class A(B, C): pass

	print(A.mro())		Команда mro() выводит порядок, в котором происходит поиск. Поиск идет по порядку вниз по графу.
						Сначала первый предок, потом первый предок предка, потом второй предок предка, потом второй предок.
						Класс object последний.
	
	[<class '__main__.A'>, <class '__main__.B'>, <class '__main__.D'>, 
	 <class '__main__.E'>, <class '__main__.C'>, <class 'object'>]
	
	
вызвать метод суперкласса:
	class A(list):
		def pop(self):
			super(A, self).pop()		То же самое, что вызвать list.pop()


считать input
	n = input()
	
	
разбить строку на подстроки
	str.split()
	

узнать методы и поля класса
	dir(Class)
	
	
